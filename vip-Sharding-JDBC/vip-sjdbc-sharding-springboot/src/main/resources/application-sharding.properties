# 垂直拆分（不同的表在不同的库中）+ 读写分离（使用user/student表）
spring.shardingsphere.datasource.names=ds0,ds0slave1,ds0slave2,ds1,ds1slave1,ds1slave2

# 主数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root
# 从数据源1
spring.shardingsphere.datasource.ds0slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0slave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0slave1.url=jdbc:mysql://localhost:3306/ds0slave1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0slave1.username=root
spring.shardingsphere.datasource.ds0slave1.password=root
# 从数据源2
spring.shardingsphere.datasource.ds0slave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0slave2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0slave2.url=jdbc:mysql://localhost:3306/ds0slave2?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0slave2.username=root
spring.shardingsphere.datasource.ds0slave2.password=root

# 主数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root
# 从数据源1
spring.shardingsphere.datasource.ds1slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1slave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1slave1.url=jdbc:mysql://localhost:3306/ds1slave1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1slave1.username=root
spring.shardingsphere.datasource.ds1slave1.password=root
# 从数据源2
spring.shardingsphere.datasource.ds1slave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1slave2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1slave2.url=jdbc:mysql://localhost:3306/ds1slave2?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1slave2.username=root
spring.shardingsphere.datasource.ds1slave2.password=root

# 垂直拆分：user表绑定ds0节点(下边的ds0是数据源名称)
spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds0.user
# 垂直拆分：student表绑定ds1节点(下边的ds1是数据源名称)
spring.shardingsphere.sharding.tables.student.actual-data-nodes=ds1.student
# 设置主键
spring.shardingsphere.sharding.tables.student.key-generator.column=id
spring.shardingsphere.sharding.tables.student.key-generator.type=SNOWFLAKE


# 读写分离配置：查询时的负载均衡算法round_robin（轮询）和random（随机）
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
spring.shardingsphere.masterslave.name=dataSource
# 读写分离
#spring.shardingsphere.masterslave.master-data-source-name=ds0
#spring.shardingsphere.masterslave.slave-data-source-names=ds0slave1,ds0slave2
# 读写分离(下边的ds0全部是数据源名称)
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=ds0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=ds0slave1,ds0slave2
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=ds1
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=ds1slave1,ds1slave2

# 显示SQL
spring.shardingsphere.props.sql.show=true
